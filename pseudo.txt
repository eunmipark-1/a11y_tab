tab UI의 기본동작
1. tab UI가 초기화 되면, 한개 tab pannel을 노출시키고 이 tab pannel과 연관된 tab을 활성화 되었다고 표시
2. 사용자가 다른 tab을 선택하면, 선택된 탭을 활성화 표시하고, 이전 tab pannel을 숨기고 활성화 된 tab과 연관된 tab pannel을 노출

tab UI의 키보드 인터렉션
1. tab : 탭 목록 내부로 초점이 이동할 떄, 활성화 되어 있는 탭으로 초점이동. 
         탭 목록이 초점을 포함하고 있을 경우, 탭 패널이나 탭 패널 내부의 첫번째 초점을 얻을 수 있는 요소로 초점 이동
2. 초점이 탭 요소에 있을ㄷ 떄 
    * left Arrow : 이전 tab으로 초점 이동. 초점이 첫번째 요소에 있었다면 마지막 탭으로 초점 이동
    * right Arrow : 다음 tab으로 초점 이동. 초점이 마지막 요소에 있었다면 첫 번째 탭으로 초점이동. 
3. 탭 목록 내우베 초점이 있을 때
    * Space, Enter : 탭 활성화
    * Home (선택적 제공):  첫번째 탭으로 초점 이동
    * End (선택적 제공): 마지막 탭으로 초점 이동
    * Shift + F10: 탭이 연관된 팝업 메뉴를 가질 경우 메뉴 노출
    * Delete(선택적 제공) : 탭이 삭제 가능하다면, 탭과 연관된 탭 패널을 모두 삭제하고, 
        나머지 탭이 존재 한다면 삭제된 다음 탭으로 초점을 이동시키고 활성화


대다수 탭 UI을 만든다고 하면 마우스로 클릭하는 경우만 생각하고 만드는 경우가 허다한데, 
실제로 키보드 인터렉션이 제공되지 않으면 포인팅 디바이스를 사용할 수 없는 사용자의 경우 
전혀 사용할 수 없는 UI를 만드는 셈이 된다. 따라서 탭 목록에서 마우스의 이동에 대응하는 
방향키, 탭을 선택하는 행위로서 마우스 클릭에 대응하는 Space와 Enter는 최소한으로 제공되어야 한다.

탭 콘텐츠를 이용하는 사람의 논리적 흐름인데 첫 번째 탭의 것을 보고 싶은 사람은 다른 탭 메뉴를 확인할 것 없이 
바로 탭 패널로 시선을 이동시키면 된다. 또, 첫번째 탭 레이블을 인식하고 나니 관심없는 콘텐츠라서 다음 탭이 무엇인지 확인하고자 할때
다음 탭으로 시선을 이동시키게 된다. 이를 tab키를 이용한 초점 이동만을 사용하게 되면 둘 중 하나를 포기해야 하는 
상황이 되기 때문에, 탭 탐색과 탭 패널로의 탐색을 모두 만족시켜주는 키보드 인터렉션이 필요하다. 

WAI-AREA Roles, Properties, States
1. 탭 목록에 해당하는 요소에 tablist role 부여 - AT가 탭 목록을 인식
2. 탭에 해당하는 요소에 tab role 부여 - AT가 탭에 접슨 시 탭 컨텐츠임을 알려주며, 
    인식된 tablist role을 통해 총 몇재의 탭 중 현재 몇 번째 탭을 탐색 중인지 알려줌 ex) "bar탭 2/3"
3. 탭에 대한 컨텐츠 패널에 해당하는 요소에 tabpanel role부여 - AT가 해당 패널에 접근시 탭 패널 컨텐츠 임을 알려줌
4. 각 탭에 탭과 연관된 탭 패널을 참조하는 aria-controls property 부여 - AT가 해당 탭 접근 시 , 
    연관된 탭 패널 정보를 인식
5. 활성화 된 탭에 aria-selected state를 부여하고 true값 설정, 나머지 탭들에는 false로 설정된 aria-selected state를 부여
    - AT가 aria-selected 상태에 따라 선택된 상태인지 미선택된 상태인지 인식하고 사용자에게 알려줌
      ex) "foo탭 1/3 선택됨" 
6. 각 탭 패널에 이 패널과 연관된 탭 요소를 참조하는 aria-labelledby propery부여 - AT가 접근한 "탭패널" 컨텐츠의 
    label을 참조 인식하여 어떤 탭의 패널인지 사용자에게 알려줌 ex)"foo 속성 페이지"
        